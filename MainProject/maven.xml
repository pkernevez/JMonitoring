<?xml version="1.0" encoding="ISO-8859-1"?>
 
<!--
  ************************************************************************
  MonitoringProject
  ************************************************************************
-->
            
<project   
        xmlns:j="jelly:core"
        xmlns:maven="jelly:maven"
        xmlns:util="jelly:util"
        xmlns:ant="jelly:ant"
        xmlns:fmt="jelly:fmt"
        xmlns:x="jelly:xml">
                  
    <goal name="help" >
        <echo>"buildSite" prereqs="clean"</echo>
        <echo>"buildAndDeploy" prereqs="clean"</echo>
        <echo>"buildRelease" prereqs="clean,multiproject:install,announcement"</echo>
        <echo>"deploySite" prereqs="buildSite,buildRelease"</echo>
    </goal>
    
		<goal name="build">
			<j:set var="_exception1" value="${null}" />
			<j:catch var="_exception1">
				<echo>***** Try to clean project</echo>
				<attainGoal name="multiproject:clean" />
				<attainGoal name="clean" />
			</j:catch>
			<!-- Le maven clean peut planter si on vient de changer de version globalement pour le projet car les dependances n'existe pas encore 
				==> on lance un install pour tout refaire et on lance ensuite un clean -->
			<j:if test="${_exception1 != null}">
				<echo>***** Clean Fail, now try to build without test then we clean</echo>
				<j:set var="maven.test.skip" value="true" scope="parent" />
					<j:catch var="_exception1">
						<!-- On lance ce goal 2 fois car il plante (lors du build de l'ear sur la dependance de la web app) a cause de pb de telechargement de war interdit
							C'est une consequence de la limitation du traffic entre Paris et Orleans -->
						<attainGoal name="multiproject:install" />
					</j:catch>
					<!-- Celui la doit passer... -->
					<attainGoal name="multiproject:install" />
					<j:set var="maven.test.skip" value="false" scope="parent" />
					<attainGoal name="multiproject:clean" />
					<attainGoal name="clean" />
				</j:if>
				<echo>***** Try to build</echo>
			<attainGoal name="multiproject:install" />
    </goal>

	<goal name="buildSite" prereqs="multiproject:clean,exclude-sample">
            <!-- @todo Utiliser Cargo -->
            <echo>Build Site</echo>
	        <attainGoal name="build"/>
            <attainGoal name="multiproject:clean"/>
            <attainGoal name="clean"/>
            
	        <!-- Autorise the failure of the test during site generation -->
            <j:set var="maven.webtest.config.haltonfailure" value="false"/>
            <j:set var="maven.webtest.config.haltonerror"   value="false"/>
	        <j:set var="maven.test.skip" value="true"/>
            
            <echo>Site all</echo>
	        <attainGoal name="multiproject:site"/>
	        
	        <echo>Webtest</echo>
	        <!--attainGoal name="webtest"/-->
	        
    </goal>
    
		<goal name="buildAndDeploy" >
	  	<echo>Build All</echo>
	    <attainGoal name="build"/>
      <echo>Deploy WebApp [administration_console.war]</echo>
      <!-- Tomcat -->
      <!--copy file="../administration_console/target/administration_console.war"    todir="C:/Program Files/Apache Software Foundation/Tomcat 5.5/webapps"/>
      <copy file="../sample_webapp/target/sample_webapp.war"                      todir="C:/Program Files/Apache Software Foundation/Tomcat 5.5/webapps"/-->
      <!-- AppServer -->
      <copy file="../framework/administration_console/target/administration_console.war" todir="${application.server.deploy.dir}"/>
      <copy file="../sample/sample_webapp/target/sample_webapp.war" todir="${application.server.deploy.dir}"/>
      <!-- Pour éviter les effet de bord avec Eclipse -->
      <attainGoal name="multiproject:clean"/>
      <attainGoal name="clean"/>
   	</goal>  
   
	
        
		<goal name="buildRelease">
	    <attainGoal name="build"/>
	    <attainGoal name="announcement"/>
		
	    <j:set var="release.dir" scope="parent" value="${maven.build.dir}/release"/>
    	<j:set var="release.file" scope="parent" value="${maven.repo.local}/${pom.groupId}/releases/${pom.groupId}-${monitoring.version}.zip"/>

	    <mkdir dir="${release.dir}"/>
	    <!-- main artifacts -->
	    <copy file="${maven.repo.local}/jmonitoring/jars/core_monitoring-${monitoring.version}.jar" todir="${release.dir}"/>
	    <copy file="${maven.repo.local}/jmonitoring/wars/administration_console-${monitoring.version}.war" todir="${release.dir}"/>
	
	    <!-- sample artifacts -->
	    <copy file="${maven.repo.local}/jmonitoring/jars/sample_core-${monitoring.version}.jar" todir="${release.dir}"/>
	    <copy file="${maven.repo.local}/jmonitoring/wars/sample_webapp-${monitoring.version}.war" todir="${release.dir}"/>
	    
	    <!-- Annoucement -->
	    <copy file="${maven.build.dir}/generated-xdocs/announcements/announcement-${monitoring.version}.txt" todir="${release.dir}"/>
	    
	    <!-- license -->
	    <copy file="${basedir}/LICENSE.txt" todir="${release.dir}"/>
	    
	    <!-- MySql create script -->
	    <copy file="${basedir}/../framework/core_monitoring/src/main/sql/createMySqlDB.sql" todir="${release.dir}"/>
	    
	    <!-- MySql create script -->
	    <copy file="${basedir}/../framework/core_monitoring/src/test/resources/jmonitoring.properties" todir="${release.dir}"/>
	    
	    <!-- Now build the Zip release file -->
	    <ant:zip destfile="${release.file}" basedir="${release.dir}/"/>
    </goal>


		<goal name="exclude-sample">
	   	<!-- We don't want to build the site for the sample projects...-->
      <echo>KKKK2${maven.multiproject.excludes}</echo>
      <j:set var="maven.multiproject.excludes" value="${maven.multiproject.excludes},sample_core/project.xml,sample_webapp/project.xml"/>
      <echo>KKKK1${maven.multiproject.excludes}</echo>
		</goal>
	
		<goal name="deploySite" >
    	<attainGoal name="buildSite"/>
    	<copy todir="${forge.apache.htdocs}/jmonitoring">
		   	<fileset dir="${maven.build.dir}/docs" includes="**/*.*"/>
     	</copy>
		</goal>
	
		<!--goal name="publishSite">
			<taskdef name="ftp" classname="org.apache.tools.ant.taskdefs.optional.net.FTP"/>
    	<j:set var="release.file" scope="parent" value="${maven.build.dir}/${pom.groupId}-${monitoring.version}.zip"/>
    	<copy todir="${forge.apache.htdocs}/jmonitoring">
		   	<fileset dir="${maven.build.dir}/docs" includes="**/*.*"/>
     	</copy>
  	</goal-->
</project>