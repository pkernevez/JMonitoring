//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Org.NMonitoring.Core.Dao {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("NMonitoringDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NMonitoringDataSet : System.Data.DataSet {
        
        private EXECUTION_FLOWDataTable tableEXECUTION_FLOW;
        
        private METHOD_CALLDataTable tableMETHOD_CALL;
        
        private System.Data.DataRelation relationFK281CB2153BDDEB03;
        
        private System.Data.DataRelation relationFK4ACE4AFC8FDF3479;
        
        private System.Data.DataRelation relationFK4ACE4AFCFBBE3D26;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NMonitoringDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NMonitoringDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["EXECUTION_FLOW"] != null)) {
                    base.Tables.Add(new EXECUTION_FLOWDataTable(ds.Tables["EXECUTION_FLOW"]));
                }
                if ((ds.Tables["METHOD_CALL"] != null)) {
                    base.Tables.Add(new METHOD_CALLDataTable(ds.Tables["METHOD_CALL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXECUTION_FLOWDataTable EXECUTION_FLOW {
            get {
                return this.tableEXECUTION_FLOW;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public METHOD_CALLDataTable METHOD_CALL {
            get {
                return this.tableMETHOD_CALL;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            NMonitoringDataSet cln = ((NMonitoringDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EXECUTION_FLOW"] != null)) {
                    base.Tables.Add(new EXECUTION_FLOWDataTable(ds.Tables["EXECUTION_FLOW"]));
                }
                if ((ds.Tables["METHOD_CALL"] != null)) {
                    base.Tables.Add(new METHOD_CALLDataTable(ds.Tables["METHOD_CALL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEXECUTION_FLOW = ((EXECUTION_FLOWDataTable)(base.Tables["EXECUTION_FLOW"]));
            if ((initTable == true)) {
                if ((this.tableEXECUTION_FLOW != null)) {
                    this.tableEXECUTION_FLOW.InitVars();
                }
            }
            this.tableMETHOD_CALL = ((METHOD_CALLDataTable)(base.Tables["METHOD_CALL"]));
            if ((initTable == true)) {
                if ((this.tableMETHOD_CALL != null)) {
                    this.tableMETHOD_CALL.InitVars();
                }
            }
            this.relationFK281CB2153BDDEB03 = this.Relations["FK281CB2153BDDEB03"];
            this.relationFK4ACE4AFC8FDF3479 = this.Relations["FK4ACE4AFC8FDF3479"];
            this.relationFK4ACE4AFCFBBE3D26 = this.Relations["FK4ACE4AFCFBBE3D26"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NMonitoringDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NMonitoringDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEXECUTION_FLOW = new EXECUTION_FLOWDataTable();
            base.Tables.Add(this.tableEXECUTION_FLOW);
            this.tableMETHOD_CALL = new METHOD_CALLDataTable();
            base.Tables.Add(this.tableMETHOD_CALL);
            this.relationFK281CB2153BDDEB03 = new System.Data.DataRelation("FK281CB2153BDDEB03", new System.Data.DataColumn[] {
                        this.tableMETHOD_CALL.IDColumn}, new System.Data.DataColumn[] {
                        this.tableEXECUTION_FLOW.FIRST_METHOD_CALL_IDColumn}, false);
            this.Relations.Add(this.relationFK281CB2153BDDEB03);
            this.relationFK4ACE4AFC8FDF3479 = new System.Data.DataRelation("FK4ACE4AFC8FDF3479", new System.Data.DataColumn[] {
                        this.tableEXECUTION_FLOW.IDColumn}, new System.Data.DataColumn[] {
                        this.tableMETHOD_CALL.FLOW_IDColumn}, false);
            this.Relations.Add(this.relationFK4ACE4AFC8FDF3479);
            this.relationFK4ACE4AFCFBBE3D26 = new System.Data.DataRelation("FK4ACE4AFCFBBE3D26", new System.Data.DataColumn[] {
                        this.tableMETHOD_CALL.IDColumn}, new System.Data.DataColumn[] {
                        this.tableMETHOD_CALL.PARENT_IDColumn}, false);
            this.Relations.Add(this.relationFK4ACE4AFCFBBE3D26);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXECUTION_FLOW() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMETHOD_CALL() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            NMonitoringDataSet ds = new NMonitoringDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EXECUTION_FLOWRowChangeEventHandler(object sender, EXECUTION_FLOWRowChangeEvent e);
        
        public delegate void METHOD_CALLRowChangeEventHandler(object sender, METHOD_CALLRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXECUTION_FLOWDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnTHREAD_NAME;
            
            private System.Data.DataColumn columnJVM;
            
            private System.Data.DataColumn columnBEGIN_TIME;
            
            private System.Data.DataColumn columnEND_TIME;
            
            private System.Data.DataColumn columnBEGIN_TIME_AS_DATE;
            
            private System.Data.DataColumn columnDURATION;
            
            private System.Data.DataColumn columnFIRST_METHOD_CALL_ID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWDataTable() {
                this.TableName = "EXECUTION_FLOW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXECUTION_FLOWDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXECUTION_FLOWDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THREAD_NAMEColumn {
                get {
                    return this.columnTHREAD_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JVMColumn {
                get {
                    return this.columnJVM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BEGIN_TIMEColumn {
                get {
                    return this.columnBEGIN_TIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn END_TIMEColumn {
                get {
                    return this.columnEND_TIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BEGIN_TIME_AS_DATEColumn {
                get {
                    return this.columnBEGIN_TIME_AS_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DURATIONColumn {
                get {
                    return this.columnDURATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FIRST_METHOD_CALL_IDColumn {
                get {
                    return this.columnFIRST_METHOD_CALL_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow this[int index] {
                get {
                    return ((EXECUTION_FLOWRow)(this.Rows[index]));
                }
            }
            
            public event EXECUTION_FLOWRowChangeEventHandler EXECUTION_FLOWRowChanging;
            
            public event EXECUTION_FLOWRowChangeEventHandler EXECUTION_FLOWRowChanged;
            
            public event EXECUTION_FLOWRowChangeEventHandler EXECUTION_FLOWRowDeleting;
            
            public event EXECUTION_FLOWRowChangeEventHandler EXECUTION_FLOWRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXECUTION_FLOWRow(EXECUTION_FLOWRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow AddEXECUTION_FLOWRow(string THREAD_NAME, string JVM, decimal BEGIN_TIME, decimal END_TIME, System.DateTime BEGIN_TIME_AS_DATE, decimal DURATION, METHOD_CALLRow parentMETHOD_CALLRowByFK281CB2153BDDEB03) {
                EXECUTION_FLOWRow rowEXECUTION_FLOWRow = ((EXECUTION_FLOWRow)(this.NewRow()));
                rowEXECUTION_FLOWRow.ItemArray = new object[] {
                        null,
                        THREAD_NAME,
                        JVM,
                        BEGIN_TIME,
                        END_TIME,
                        BEGIN_TIME_AS_DATE,
                        DURATION,
                        parentMETHOD_CALLRowByFK281CB2153BDDEB03[0]};
                this.Rows.Add(rowEXECUTION_FLOWRow);
                return rowEXECUTION_FLOWRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow FindByID(int ID) {
                return ((EXECUTION_FLOWRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                EXECUTION_FLOWDataTable cln = ((EXECUTION_FLOWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new EXECUTION_FLOWDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTHREAD_NAME = base.Columns["THREAD_NAME"];
                this.columnJVM = base.Columns["JVM"];
                this.columnBEGIN_TIME = base.Columns["BEGIN_TIME"];
                this.columnEND_TIME = base.Columns["END_TIME"];
                this.columnBEGIN_TIME_AS_DATE = base.Columns["BEGIN_TIME_AS_DATE"];
                this.columnDURATION = base.Columns["DURATION"];
                this.columnFIRST_METHOD_CALL_ID = base.Columns["FIRST_METHOD_CALL_ID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTHREAD_NAME = new System.Data.DataColumn("THREAD_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHREAD_NAME);
                this.columnJVM = new System.Data.DataColumn("JVM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJVM);
                this.columnBEGIN_TIME = new System.Data.DataColumn("BEGIN_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEGIN_TIME);
                this.columnEND_TIME = new System.Data.DataColumn("END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_TIME);
                this.columnBEGIN_TIME_AS_DATE = new System.Data.DataColumn("BEGIN_TIME_AS_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEGIN_TIME_AS_DATE);
                this.columnDURATION = new System.Data.DataColumn("DURATION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDURATION);
                this.columnFIRST_METHOD_CALL_ID = new System.Data.DataColumn("FIRST_METHOD_CALL_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRST_METHOD_CALL_ID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnTHREAD_NAME.MaxLength = 255;
                this.columnJVM.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow NewEXECUTION_FLOWRow() {
                return ((EXECUTION_FLOWRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EXECUTION_FLOWRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(EXECUTION_FLOWRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXECUTION_FLOWRowChanged != null)) {
                    this.EXECUTION_FLOWRowChanged(this, new EXECUTION_FLOWRowChangeEvent(((EXECUTION_FLOWRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXECUTION_FLOWRowChanging != null)) {
                    this.EXECUTION_FLOWRowChanging(this, new EXECUTION_FLOWRowChangeEvent(((EXECUTION_FLOWRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXECUTION_FLOWRowDeleted != null)) {
                    this.EXECUTION_FLOWRowDeleted(this, new EXECUTION_FLOWRowChangeEvent(((EXECUTION_FLOWRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXECUTION_FLOWRowDeleting != null)) {
                    this.EXECUTION_FLOWRowDeleting(this, new EXECUTION_FLOWRowChangeEvent(((EXECUTION_FLOWRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXECUTION_FLOWRow(EXECUTION_FLOWRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                NMonitoringDataSet ds = new NMonitoringDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXECUTION_FLOWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class METHOD_CALLDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnPARAMETERS;
            
            private System.Data.DataColumn columnBEGIN_TIME;
            
            private System.Data.DataColumn columnEND_TIME;
            
            private System.Data.DataColumn columnFULL_CLASS_NAME;
            
            private System.Data.DataColumn columnMETHOD_NAME;
            
            private System.Data.DataColumn columnTHROWABLE_CLASS_NAME;
            
            private System.Data.DataColumn columnTHROWABLE_MESSAGE;
            
            private System.Data.DataColumn columnRESULT;
            
            private System.Data.DataColumn columnGROUP_NAME;
            
            private System.Data.DataColumn columnPARENT_ID;
            
            private System.Data.DataColumn columnFLOW_ID;
            
            private System.Data.DataColumn columnSUB_METH_INDEX;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLDataTable() {
                this.TableName = "METHOD_CALL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal METHOD_CALLDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected METHOD_CALLDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PARAMETERSColumn {
                get {
                    return this.columnPARAMETERS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BEGIN_TIMEColumn {
                get {
                    return this.columnBEGIN_TIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn END_TIMEColumn {
                get {
                    return this.columnEND_TIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FULL_CLASS_NAMEColumn {
                get {
                    return this.columnFULL_CLASS_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn METHOD_NAMEColumn {
                get {
                    return this.columnMETHOD_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THROWABLE_CLASS_NAMEColumn {
                get {
                    return this.columnTHROWABLE_CLASS_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THROWABLE_MESSAGEColumn {
                get {
                    return this.columnTHROWABLE_MESSAGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RESULTColumn {
                get {
                    return this.columnRESULT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GROUP_NAMEColumn {
                get {
                    return this.columnGROUP_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PARENT_IDColumn {
                get {
                    return this.columnPARENT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FLOW_IDColumn {
                get {
                    return this.columnFLOW_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_METH_INDEXColumn {
                get {
                    return this.columnSUB_METH_INDEX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow this[int index] {
                get {
                    return ((METHOD_CALLRow)(this.Rows[index]));
                }
            }
            
            public event METHOD_CALLRowChangeEventHandler METHOD_CALLRowChanging;
            
            public event METHOD_CALLRowChangeEventHandler METHOD_CALLRowChanged;
            
            public event METHOD_CALLRowChangeEventHandler METHOD_CALLRowDeleting;
            
            public event METHOD_CALLRowChangeEventHandler METHOD_CALLRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMETHOD_CALLRow(METHOD_CALLRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow AddMETHOD_CALLRow(string PARAMETERS, decimal BEGIN_TIME, decimal END_TIME, string FULL_CLASS_NAME, string METHOD_NAME, string THROWABLE_CLASS_NAME, string THROWABLE_MESSAGE, string RESULT, string GROUP_NAME, METHOD_CALLRow parentMETHOD_CALLRowByFK4ACE4AFCFBBE3D26, EXECUTION_FLOWRow parentEXECUTION_FLOWRowByFK4ACE4AFC8FDF3479, int SUB_METH_INDEX) {
                METHOD_CALLRow rowMETHOD_CALLRow = ((METHOD_CALLRow)(this.NewRow()));
                rowMETHOD_CALLRow.ItemArray = new object[] {
                        null,
                        PARAMETERS,
                        BEGIN_TIME,
                        END_TIME,
                        FULL_CLASS_NAME,
                        METHOD_NAME,
                        THROWABLE_CLASS_NAME,
                        THROWABLE_MESSAGE,
                        RESULT,
                        GROUP_NAME,
                        parentMETHOD_CALLRowByFK4ACE4AFCFBBE3D26[0],
                        parentEXECUTION_FLOWRowByFK4ACE4AFC8FDF3479[0],
                        SUB_METH_INDEX};
                this.Rows.Add(rowMETHOD_CALLRow);
                return rowMETHOD_CALLRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow FindByID(int ID) {
                return ((METHOD_CALLRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                METHOD_CALLDataTable cln = ((METHOD_CALLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new METHOD_CALLDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPARAMETERS = base.Columns["PARAMETERS"];
                this.columnBEGIN_TIME = base.Columns["BEGIN_TIME"];
                this.columnEND_TIME = base.Columns["END_TIME"];
                this.columnFULL_CLASS_NAME = base.Columns["FULL_CLASS_NAME"];
                this.columnMETHOD_NAME = base.Columns["METHOD_NAME"];
                this.columnTHROWABLE_CLASS_NAME = base.Columns["THROWABLE_CLASS_NAME"];
                this.columnTHROWABLE_MESSAGE = base.Columns["THROWABLE_MESSAGE"];
                this.columnRESULT = base.Columns["RESULT"];
                this.columnGROUP_NAME = base.Columns["GROUP_NAME"];
                this.columnPARENT_ID = base.Columns["PARENT_ID"];
                this.columnFLOW_ID = base.Columns["FLOW_ID"];
                this.columnSUB_METH_INDEX = base.Columns["SUB_METH_INDEX"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPARAMETERS = new System.Data.DataColumn("PARAMETERS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETERS);
                this.columnBEGIN_TIME = new System.Data.DataColumn("BEGIN_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEGIN_TIME);
                this.columnEND_TIME = new System.Data.DataColumn("END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_TIME);
                this.columnFULL_CLASS_NAME = new System.Data.DataColumn("FULL_CLASS_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULL_CLASS_NAME);
                this.columnMETHOD_NAME = new System.Data.DataColumn("METHOD_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD_NAME);
                this.columnTHROWABLE_CLASS_NAME = new System.Data.DataColumn("THROWABLE_CLASS_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHROWABLE_CLASS_NAME);
                this.columnTHROWABLE_MESSAGE = new System.Data.DataColumn("THROWABLE_MESSAGE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHROWABLE_MESSAGE);
                this.columnRESULT = new System.Data.DataColumn("RESULT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT);
                this.columnGROUP_NAME = new System.Data.DataColumn("GROUP_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_NAME);
                this.columnPARENT_ID = new System.Data.DataColumn("PARENT_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARENT_ID);
                this.columnFLOW_ID = new System.Data.DataColumn("FLOW_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_ID);
                this.columnSUB_METH_INDEX = new System.Data.DataColumn("SUB_METH_INDEX", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_METH_INDEX);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnPARAMETERS.MaxLength = 255;
                this.columnFULL_CLASS_NAME.MaxLength = 120;
                this.columnMETHOD_NAME.MaxLength = 50;
                this.columnTHROWABLE_CLASS_NAME.MaxLength = 120;
                this.columnTHROWABLE_MESSAGE.MaxLength = 255;
                this.columnRESULT.MaxLength = 255;
                this.columnGROUP_NAME.MaxLength = 145;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow NewMETHOD_CALLRow() {
                return ((METHOD_CALLRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new METHOD_CALLRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(METHOD_CALLRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.METHOD_CALLRowChanged != null)) {
                    this.METHOD_CALLRowChanged(this, new METHOD_CALLRowChangeEvent(((METHOD_CALLRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.METHOD_CALLRowChanging != null)) {
                    this.METHOD_CALLRowChanging(this, new METHOD_CALLRowChangeEvent(((METHOD_CALLRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.METHOD_CALLRowDeleted != null)) {
                    this.METHOD_CALLRowDeleted(this, new METHOD_CALLRowChangeEvent(((METHOD_CALLRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.METHOD_CALLRowDeleting != null)) {
                    this.METHOD_CALLRowDeleting(this, new METHOD_CALLRowChangeEvent(((METHOD_CALLRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMETHOD_CALLRow(METHOD_CALLRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                NMonitoringDataSet ds = new NMonitoringDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "METHOD_CALLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXECUTION_FLOWRow : System.Data.DataRow {
            
            private EXECUTION_FLOWDataTable tableEXECUTION_FLOW;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXECUTION_FLOWRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXECUTION_FLOW = ((EXECUTION_FLOWDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableEXECUTION_FLOW.IDColumn]));
                }
                set {
                    this[this.tableEXECUTION_FLOW.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THREAD_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEXECUTION_FLOW.THREAD_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'THREAD_NAME\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.THREAD_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JVM {
                get {
                    try {
                        return ((string)(this[this.tableEXECUTION_FLOW.JVMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JVM\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.JVMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BEGIN_TIME {
                get {
                    try {
                        return ((decimal)(this[this.tableEXECUTION_FLOW.BEGIN_TIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BEGIN_TIME\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.BEGIN_TIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal END_TIME {
                get {
                    try {
                        return ((decimal)(this[this.tableEXECUTION_FLOW.END_TIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'END_TIME\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.END_TIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BEGIN_TIME_AS_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEXECUTION_FLOW.BEGIN_TIME_AS_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BEGIN_TIME_AS_DATE\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.BEGIN_TIME_AS_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DURATION {
                get {
                    try {
                        return ((decimal)(this[this.tableEXECUTION_FLOW.DURATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DURATION\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.DURATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIRST_METHOD_CALL_ID {
                get {
                    try {
                        return ((int)(this[this.tableEXECUTION_FLOW.FIRST_METHOD_CALL_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIRST_METHOD_CALL_ID\' in table \'EXECUTION_FLOW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXECUTION_FLOW.FIRST_METHOD_CALL_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow METHOD_CALLRow {
                get {
                    return ((METHOD_CALLRow)(this.GetParentRow(this.Table.ParentRelations["FK281CB2153BDDEB03"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK281CB2153BDDEB03"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHREAD_NAMENull() {
                return this.IsNull(this.tableEXECUTION_FLOW.THREAD_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHREAD_NAMENull() {
                this[this.tableEXECUTION_FLOW.THREAD_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJVMNull() {
                return this.IsNull(this.tableEXECUTION_FLOW.JVMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJVMNull() {
                this[this.tableEXECUTION_FLOW.JVMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEGIN_TIMENull() {
                return this.IsNull(this.tableEXECUTION_FLOW.BEGIN_TIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEGIN_TIMENull() {
                this[this.tableEXECUTION_FLOW.BEGIN_TIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_TIMENull() {
                return this.IsNull(this.tableEXECUTION_FLOW.END_TIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_TIMENull() {
                this[this.tableEXECUTION_FLOW.END_TIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEGIN_TIME_AS_DATENull() {
                return this.IsNull(this.tableEXECUTION_FLOW.BEGIN_TIME_AS_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEGIN_TIME_AS_DATENull() {
                this[this.tableEXECUTION_FLOW.BEGIN_TIME_AS_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDURATIONNull() {
                return this.IsNull(this.tableEXECUTION_FLOW.DURATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDURATIONNull() {
                this[this.tableEXECUTION_FLOW.DURATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIRST_METHOD_CALL_IDNull() {
                return this.IsNull(this.tableEXECUTION_FLOW.FIRST_METHOD_CALL_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIRST_METHOD_CALL_IDNull() {
                this[this.tableEXECUTION_FLOW.FIRST_METHOD_CALL_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow[] GetMETHOD_CALLRows() {
                return ((METHOD_CALLRow[])(base.GetChildRows(this.Table.ChildRelations["FK4ACE4AFC8FDF3479"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class METHOD_CALLRow : System.Data.DataRow {
            
            private METHOD_CALLDataTable tableMETHOD_CALL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal METHOD_CALLRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMETHOD_CALL = ((METHOD_CALLDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMETHOD_CALL.IDColumn]));
                }
                set {
                    this[this.tableMETHOD_CALL.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARAMETERS {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.PARAMETERSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PARAMETERS\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.PARAMETERSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BEGIN_TIME {
                get {
                    try {
                        return ((decimal)(this[this.tableMETHOD_CALL.BEGIN_TIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BEGIN_TIME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.BEGIN_TIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal END_TIME {
                get {
                    try {
                        return ((decimal)(this[this.tableMETHOD_CALL.END_TIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'END_TIME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.END_TIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FULL_CLASS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.FULL_CLASS_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FULL_CLASS_NAME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.FULL_CLASS_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string METHOD_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.METHOD_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'METHOD_NAME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.METHOD_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THROWABLE_CLASS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.THROWABLE_CLASS_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'THROWABLE_CLASS_NAME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.THROWABLE_CLASS_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THROWABLE_MESSAGE {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.THROWABLE_MESSAGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'THROWABLE_MESSAGE\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.THROWABLE_MESSAGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESULT {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.RESULTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RESULT\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.RESULTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMETHOD_CALL.GROUP_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GROUP_NAME\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.GROUP_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARENT_ID {
                get {
                    try {
                        return ((int)(this[this.tableMETHOD_CALL.PARENT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PARENT_ID\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.PARENT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FLOW_ID {
                get {
                    try {
                        return ((int)(this[this.tableMETHOD_CALL.FLOW_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FLOW_ID\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.FLOW_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SUB_METH_INDEX {
                get {
                    try {
                        return ((int)(this[this.tableMETHOD_CALL.SUB_METH_INDEXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_METH_INDEX\' in table \'METHOD_CALL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMETHOD_CALL.SUB_METH_INDEXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow EXECUTION_FLOWRow {
                get {
                    return ((EXECUTION_FLOWRow)(this.GetParentRow(this.Table.ParentRelations["FK4ACE4AFC8FDF3479"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK4ACE4AFC8FDF3479"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow METHOD_CALLRowParent {
                get {
                    return ((METHOD_CALLRow)(this.GetParentRow(this.Table.ParentRelations["FK4ACE4AFCFBBE3D26"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK4ACE4AFCFBBE3D26"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAMETERSNull() {
                return this.IsNull(this.tableMETHOD_CALL.PARAMETERSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAMETERSNull() {
                this[this.tableMETHOD_CALL.PARAMETERSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEGIN_TIMENull() {
                return this.IsNull(this.tableMETHOD_CALL.BEGIN_TIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEGIN_TIMENull() {
                this[this.tableMETHOD_CALL.BEGIN_TIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_TIMENull() {
                return this.IsNull(this.tableMETHOD_CALL.END_TIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_TIMENull() {
                this[this.tableMETHOD_CALL.END_TIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFULL_CLASS_NAMENull() {
                return this.IsNull(this.tableMETHOD_CALL.FULL_CLASS_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFULL_CLASS_NAMENull() {
                this[this.tableMETHOD_CALL.FULL_CLASS_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMETHOD_NAMENull() {
                return this.IsNull(this.tableMETHOD_CALL.METHOD_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMETHOD_NAMENull() {
                this[this.tableMETHOD_CALL.METHOD_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHROWABLE_CLASS_NAMENull() {
                return this.IsNull(this.tableMETHOD_CALL.THROWABLE_CLASS_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHROWABLE_CLASS_NAMENull() {
                this[this.tableMETHOD_CALL.THROWABLE_CLASS_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHROWABLE_MESSAGENull() {
                return this.IsNull(this.tableMETHOD_CALL.THROWABLE_MESSAGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHROWABLE_MESSAGENull() {
                this[this.tableMETHOD_CALL.THROWABLE_MESSAGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESULTNull() {
                return this.IsNull(this.tableMETHOD_CALL.RESULTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESULTNull() {
                this[this.tableMETHOD_CALL.RESULTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUP_NAMENull() {
                return this.IsNull(this.tableMETHOD_CALL.GROUP_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUP_NAMENull() {
                this[this.tableMETHOD_CALL.GROUP_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARENT_IDNull() {
                return this.IsNull(this.tableMETHOD_CALL.PARENT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARENT_IDNull() {
                this[this.tableMETHOD_CALL.PARENT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLOW_IDNull() {
                return this.IsNull(this.tableMETHOD_CALL.FLOW_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLOW_IDNull() {
                this[this.tableMETHOD_CALL.FLOW_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_METH_INDEXNull() {
                return this.IsNull(this.tableMETHOD_CALL.SUB_METH_INDEXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_METH_INDEXNull() {
                this[this.tableMETHOD_CALL.SUB_METH_INDEXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow[] GetEXECUTION_FLOWRows() {
                return ((EXECUTION_FLOWRow[])(base.GetChildRows(this.Table.ChildRelations["FK281CB2153BDDEB03"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow[] GetMETHOD_CALLRows() {
                return ((METHOD_CALLRow[])(base.GetChildRows(this.Table.ChildRelations["FK4ACE4AFCFBBE3D26"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXECUTION_FLOWRowChangeEvent : System.EventArgs {
            
            private EXECUTION_FLOWRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRowChangeEvent(EXECUTION_FLOWRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXECUTION_FLOWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class METHOD_CALLRowChangeEvent : System.EventArgs {
            
            private METHOD_CALLRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRowChangeEvent(METHOD_CALLRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public METHOD_CALLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Org.NMonitoring.Core.Dao.NMonitoringDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXECUTION_FLOWTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EXECUTION_FLOWTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXECUTION_FLOW";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("THREAD_NAME", "THREAD_NAME");
            tableMapping.ColumnMappings.Add("JVM", "JVM");
            tableMapping.ColumnMappings.Add("BEGIN_TIME", "BEGIN_TIME");
            tableMapping.ColumnMappings.Add("END_TIME", "END_TIME");
            tableMapping.ColumnMappings.Add("BEGIN_TIME_AS_DATE", "BEGIN_TIME_AS_DATE");
            tableMapping.ColumnMappings.Add("DURATION", "DURATION");
            tableMapping.ColumnMappings.Add("FIRST_METHOD_CALL_ID", "FIRST_METHOD_CALL_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [jmonitoring].[EXECUTION_FLOW] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [jmonitoring].[EXECUTION_FLOW] ([THREAD_NAME], [JVM], [BEGIN_TIME], [END_TIME], [BEGIN_TIME_AS_DATE], [DURATION], [FIRST_METHOD_CALL_ID]) VALUES (@THREAD_NAME, @JVM, @BEGIN_TIME, @END_TIME, @BEGIN_TIME_AS_DATE, @DURATION, @FIRST_METHOD_CALL_ID);
SELECT ID, THREAD_NAME, JVM, BEGIN_TIME, END_TIME, BEGIN_TIME_AS_DATE, DURATION, FIRST_METHOD_CALL_ID FROM EXECUTION_FLOW WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THREAD_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THREAD_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JVM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JVM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "BEGIN_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@END_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "END_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME_AS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "BEGIN_TIME_AS_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "DURATION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FIRST_METHOD_CALL_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FIRST_METHOD_CALL_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [jmonitoring].[EXECUTION_FLOW] SET [THREAD_NAME] = @THREAD_NAME, [JVM] = @JVM, [BEGIN_TIME] = @BEGIN_TIME, [END_TIME] = @END_TIME, [BEGIN_TIME_AS_DATE] = @BEGIN_TIME_AS_DATE, [DURATION] = @DURATION, [FIRST_METHOD_CALL_ID] = @FIRST_METHOD_CALL_ID WHERE (([ID] = @Original_ID));
SELECT ID, THREAD_NAME, JVM, BEGIN_TIME, END_TIME, BEGIN_TIME_AS_DATE, DURATION, FIRST_METHOD_CALL_ID FROM EXECUTION_FLOW WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THREAD_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THREAD_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JVM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JVM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "BEGIN_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@END_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "END_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME_AS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "BEGIN_TIME_AS_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "DURATION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FIRST_METHOD_CALL_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FIRST_METHOD_CALL_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Org.NMonitoring.Core.Properties.Settings.Default.jmonitoringConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, THREAD_NAME, JVM, BEGIN_TIME, END_TIME, BEGIN_TIME_AS_DATE, DURATION, " +
                "FIRST_METHOD_CALL_ID FROM jmonitoring.EXECUTION_FLOW";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID, THREAD_NAME, JVM, BEGIN_TIME, END_TIME, BEGIN_TIME_AS_DATE, DURATI" +
                "ON, FIRST_METHOD_CALL_ID\r\nFROM         EXECUTION_FLOW\r\nWHERE     (ID = @ID)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NMonitoringDataSet.EXECUTION_FLOWDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NMonitoringDataSet.EXECUTION_FLOWDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NMonitoringDataSet.EXECUTION_FLOWDataTable dataTable = new NMonitoringDataSet.EXECUTION_FLOWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(NMonitoringDataSet.EXECUTION_FLOWDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NMonitoringDataSet.EXECUTION_FLOWDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            NMonitoringDataSet.EXECUTION_FLOWDataTable dataTable = new NMonitoringDataSet.EXECUTION_FLOWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NMonitoringDataSet.EXECUTION_FLOWDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NMonitoringDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EXECUTION_FLOW");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class METHOD_CALLTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public METHOD_CALLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "METHOD_CALL";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PARAMETERS", "PARAMETERS");
            tableMapping.ColumnMappings.Add("BEGIN_TIME", "BEGIN_TIME");
            tableMapping.ColumnMappings.Add("END_TIME", "END_TIME");
            tableMapping.ColumnMappings.Add("FULL_CLASS_NAME", "FULL_CLASS_NAME");
            tableMapping.ColumnMappings.Add("METHOD_NAME", "METHOD_NAME");
            tableMapping.ColumnMappings.Add("THROWABLE_CLASS_NAME", "THROWABLE_CLASS_NAME");
            tableMapping.ColumnMappings.Add("THROWABLE_MESSAGE", "THROWABLE_MESSAGE");
            tableMapping.ColumnMappings.Add("RESULT", "RESULT");
            tableMapping.ColumnMappings.Add("GROUP_NAME", "GROUP_NAME");
            tableMapping.ColumnMappings.Add("PARENT_ID", "PARENT_ID");
            tableMapping.ColumnMappings.Add("FLOW_ID", "FLOW_ID");
            tableMapping.ColumnMappings.Add("SUB_METH_INDEX", "SUB_METH_INDEX");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [jmonitoring].[METHOD_CALL] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [jmonitoring].[METHOD_CALL] ([PARAMETERS], [BEGIN_TIME], [END_TIME], [FULL_CLASS_NAME], [METHOD_NAME], [THROWABLE_CLASS_NAME], [THROWABLE_MESSAGE], [RESULT], [GROUP_NAME], [PARENT_ID], [FLOW_ID], [SUB_METH_INDEX]) VALUES (@PARAMETERS, @BEGIN_TIME, @END_TIME, @FULL_CLASS_NAME, @METHOD_NAME, @THROWABLE_CLASS_NAME, @THROWABLE_MESSAGE, @RESULT, @GROUP_NAME, @PARENT_ID, @FLOW_ID, @SUB_METH_INDEX);
SELECT ID, PARAMETERS, BEGIN_TIME, END_TIME, FULL_CLASS_NAME, METHOD_NAME, THROWABLE_CLASS_NAME, THROWABLE_MESSAGE, RESULT, GROUP_NAME, PARENT_ID, FLOW_ID, SUB_METH_INDEX FROM METHOD_CALL WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PARAMETERS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PARAMETERS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "BEGIN_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@END_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "END_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FULL_CLASS_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FULL_CLASS_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@METHOD_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "METHOD_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THROWABLE_CLASS_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THROWABLE_CLASS_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THROWABLE_MESSAGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THROWABLE_MESSAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RESULT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "RESULT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PARENT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FLOW_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FLOW_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_METH_INDEX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_METH_INDEX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [jmonitoring].[METHOD_CALL] SET [PARAMETERS] = @PARAMETERS, [BEGIN_TIME] = @BEGIN_TIME, [END_TIME] = @END_TIME, [FULL_CLASS_NAME] = @FULL_CLASS_NAME, [METHOD_NAME] = @METHOD_NAME, [THROWABLE_CLASS_NAME] = @THROWABLE_CLASS_NAME, [THROWABLE_MESSAGE] = @THROWABLE_MESSAGE, [RESULT] = @RESULT, [GROUP_NAME] = @GROUP_NAME, [PARENT_ID] = @PARENT_ID, [FLOW_ID] = @FLOW_ID, [SUB_METH_INDEX] = @SUB_METH_INDEX WHERE (([ID] = @Original_ID));
SELECT ID, PARAMETERS, BEGIN_TIME, END_TIME, FULL_CLASS_NAME, METHOD_NAME, THROWABLE_CLASS_NAME, THROWABLE_MESSAGE, RESULT, GROUP_NAME, PARENT_ID, FLOW_ID, SUB_METH_INDEX FROM METHOD_CALL WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PARAMETERS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PARAMETERS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BEGIN_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "BEGIN_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@END_TIME", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 19, 0, "END_TIME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FULL_CLASS_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FULL_CLASS_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@METHOD_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "METHOD_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THROWABLE_CLASS_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THROWABLE_CLASS_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THROWABLE_MESSAGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THROWABLE_MESSAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RESULT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "RESULT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PARENT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FLOW_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FLOW_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_METH_INDEX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_METH_INDEX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Org.NMonitoring.Core.Properties.Settings.Default.jmonitoringConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, PARAMETERS, BEGIN_TIME, END_TIME, FULL_CLASS_NAME, METHOD_NAME, THROWA" +
                "BLE_CLASS_NAME, THROWABLE_MESSAGE, RESULT, GROUP_NAME, PARENT_ID, FLOW_ID, SUB_M" +
                "ETH_INDEX FROM jmonitoring.METHOD_CALL";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NMonitoringDataSet.METHOD_CALLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NMonitoringDataSet.METHOD_CALLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NMonitoringDataSet.METHOD_CALLDataTable dataTable = new NMonitoringDataSet.METHOD_CALLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NMonitoringDataSet.METHOD_CALLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NMonitoringDataSet dataSet) {
            return this.Adapter.Update(dataSet, "METHOD_CALL");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
}

#pragma warning restore 1591